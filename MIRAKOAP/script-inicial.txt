(base) santocyber@santocyber:~$ cat openwrt/files/etc/uci-defaults/99-custom-init 
#!/bin/sh





# Carrega os módulos necessários para NAT e rastreamento de conexões
modprobe nf_conntrack
modprobe nf_nat
modprobe iptable_nat

systemctl stop serial-getty@ttyAMA0.service
systemctl disable serial-getty@ttyAMA0.service
##echo 'console=tty1 root=PARTUUID=952f2311-02 rootfstype=squashfs,ext4 rootwait' > /boot/cmdline.txt
sed -i 's/console=serial0,[0-9]\+ //g' /boot/cmdline.txt
echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf


#############################
# Criação do arquivo de opções do PPP (/etc/ppp/peers/wan4g)
#############################
mkdir -p /etc/ppp/peers
cat << 'EOF' > /etc/ppp/peers/wan4g
/dev/ttyAMA0 115200
connect "/usr/sbin/chat -v -f /etc/chatscripts/3g.chat"
defaultroute
replacedefaultroute
persist
noauth
usepeerdns
noipdefault
ipcp-accept-remote
mtu 1500
mru 1500
lcp-echo-interval 20
lcp-echo-failure 3
EOF

#############################
# Criação do script de discagem para o modem (/etc/chatscripts/3g.chat)
#############################
mkdir -p /etc/chatscripts
cat << 'EOF' > /etc/chatscripts/3g.chat
TIMEOUT 60
ABORT 'BUSY'
ABORT 'NO CARRIER'
ABORT 'ERROR'
''      AT+CFUN=1
OK      AT+IPR=115200
OK      AT+CMEE=1
OK      AT+CGDCONT=1,"IP","zap.vivo.com.br"
OK      ATD*99#
CONNECT ''
EOF

chmod +x /etc/chatscripts/3g.chat

#############################
# Configuração do AP, Hostname e rede LAN
#############################

# Define o hostname
uci set system.@system[0].hostname='MirakoRouter'
uci commit system

# Configura o Access Point
uci set wireless.radio0.disabled='0'
uci set wireless.default_radio0.mode='ap'
uci set wireless.default_radio0.ssid='MirakoAP'
uci set wireless.default_radio0.encryption='psk2'
uci set wireless.default_radio0.key='12345678'
uci set wireless.default_radio0.network='lan'
uci commit wireless

# Configuração da rede LAN (estática) e DHCP
uci set network.lan.proto='static'
uci set network.lan.ipaddr='192.168.10.1'
uci commit network

uci set dhcp.lan.start='20'
uci set dhcp.lan.limit='250'
# Configura os servidores DNS via DHCP: primário Google (8.8.8.8) e secundário 187.50.250.215
uci set dhcp.lan.dhcp_option='6,8.8.8.8,187.50.250.215'
uci commit dhcp

#############################
# Configuração da interface 4G (modem) via UCI
#############################
uci set network.wan4g=interface
uci set network.wan4g.proto='3g'
uci set network.wan4g.device='/dev/ttyAMA0'
uci set network.wan4g.dialnumber='*99#'
uci set network.wan4g.apn='zap.vivo.com.br'
uci set network.wan4g.username='vivo'
uci set network.wan4g.password='vivo'
uci set network.wan4g.service='umts'

# Atualiza o chat script para usar o arquivo 3g.chat
uci set network.wan4g.chat='/etc/chatscripts/3g.chat'

uci set network.wan4g.metric='10'
uci set network.wan.metric='20'

uci commit network

#############################
# Configuração do Firewall e NAT via UCI
#############################
uci set firewall.@zone[0].forward='ACCEPT'  # Zona LAN
uci set firewall.@zone[1].forward='ACCEPT'  # Zona WAN
uci set firewall.@zone[1].input='ACCEPT'
uci set firewall.@zone[1].masq='1'
uci set firewall.@zone[1].mtu_fix='1'
# Usa o nome real da interface PPP (geralmente renomeada para "wan4g")
uci add_list firewall.@zone[1].network='wan4g'
uci set firewall.@zone[1].network='wan wan4g'
# Define o encaminhamento do tráfego da LAN para a interface "wan4g"
uci set firewall.@forwarding[0].src='lan'
uci set firewall.@forwarding[0].dest='wan'
uci commit firewall


#############################
# Habilitar IP Forwarding
#############################
sysctl -w net.ipv4.ip_forward=1

# (Opcional) Reforça a regra de masquerading via iptables
iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -o wan4g -j MASQUERADE
iptables -t nat -A POSTROUTING -o wan4g -j MASQUERADE

# Adiciona as regras personalizadas no arquivo /etc/firewall.user para persistirem após o boot
cat << 'EOF' >> /etc/firewall.user
iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -o wan4g -j MASQUERADE
iptables -t nat -A POSTROUTING -o wan4g -j MASQUERADE
EOF

/etc/init.d/nodogsplash disable
/etc/init.d/nodogsplash stop

# Reinicia os serviços para aplicar todas as configurações
/etc/init.d/network restart
/etc/init.d/dnsmasq restart
/etc/init.d/firewall restart
/etc/init.d/system restart



# --- Criar e montar a "partição" Samba de 100MB ---
SAMBAMOUNT="/mnt/samba"
SAMBafile="/samba.img"

if [ ! -f "$SAMBafile" ]; then
    echo "Criando arquivo de imagem de 100MB para o Samba..."
    dd if=/dev/zero of="$SAMBafile" bs=1M count=100
    echo "Formatando a imagem com ext4..."
    mkfs.ext4 -q "$SAMBafile"
fi

if [ ! -d "$SAMBAMOUNT" ]; then
    mkdir -p "$SAMBAMOUNT"
fi

if ! mountpoint -q "$SAMBAMOUNT"; then
    echo "Montando a imagem em $SAMBAMOUNT..."
    mount -o loop "$SAMBafile" "$SAMBAMOUNT"
fi

# Adiciona ao fstab para montagem automática caso não esteja definido
grep -qF "$SAMBafile" /etc/fstab || echo "$SAMBafile  $SAMBAMOUNT  ext4  loop  0 0" >> /etc/fstab

# --- Configurar o Samba para compartilhar esse diretório ---
SMB_CONF="/etc/samba/smb.conf"
SMB_TEMPLATE="/etc/samba/smb.conf.template"

# Sobrescreve o smb.conf com a nova configuração:
cat << EOF > "$SMB_CONF"
[global]
   netbios name = MirakoRouter
   workgroup = WORKGROUP
   server string = Samba por mirako.Org
   security = user
   map to guest = Bad User
   guest account = nobody
   log file = /var/log/samba.log
   max log size = 50
   unix charset = UTF-8
   load printers = no
   disable spoolss = yes

[sambashare]
   comment = Compartilhamento Samba de 100MB
   path = /mnt/samba
   browseable = yes
   writable = yes
   guest ok = yes
   create mask = 0777
   directory mask = 0777
EOF

# Se desejar, sobrescreva também o smb.conf.template:
cat << EOF > "$SMB_TEMPLATE"
[global]
   netbios name = MirakoRouter
   workgroup = WORKGROUP
   server string = Samba por mirako.Org
   security = user
   map to guest = Bad User
   guest account = nobody
   log file = /var/log/samba.log
   max log size = 50
   unix charset = UTF-8
   load printers = no
   disable spoolss = yes

[sambashare]
   comment = Compartilhamento Samba de 100MB
   path = /mnt/samba
   browseable = yes
   writable = yes
   guest ok = yes
   create mask = 0777
   directory mask = 0777
EOF
    fi
    echo "Reiniciando o serviço Samba..."

    /etc/init.d/samba4 restart
else
    echo "Atenção: $SMB_CONF não encontrado. Verifique se o caminho do arquivo de configuração do Samba está correto."
fi

    chmod -R 0777 /mnt/samba




# --- Configurar os feeds do opkg ---
CUSTOM_FEEDS_CONF="/etc/opkg/customfeeds.conf"

cat << EOF > "$CUSTOM_FEEDS_CONF"
src/gz openwrt_core http://downloads.openwrt.org/releases/22.03.5/targets/bcm27xx/bcm2710/packages
src/gz openwrt_base http://downloads.openwrt.org/releases/22.03.5/packages/arm_cortex-a53/base
src/gz openwrt_luci http://downloads.openwrt.org/releases/22.03.5/packages/arm_cortex-a53/luci
src/gz openwrt_packages http://downloads.openwrt.org/releases/22.03.5/packages/arm_cortex-a53/packages
src/gz openwrt_routing http://downloads.openwrt.org/releases/22.03.5/packages/arm_cortex-a53/routing
EOF

echo "Feeds do opkg configurados em $CUSTOM_FEEDS_CONF"







exit 0
